From 3d2d99e13d4c682a65bcf6fafabd37f5890e27c4 Mon Sep 17 00:00:00 2001
From: Xin Long <lucien.xin@gmail.com>
Date: Wed, 10 Aug 2022 16:53:51 -0400
Subject: [PATCH 1/2] tcp: add a sockopt to do tls 1.3 hs in kernel

Signed-off-by: Xin Long <lucien.xin@gmail.com>
---
 include/uapi/linux/tcp.h |  1 +
 net/ipv4/tcp.c           | 39 +++++++++++++++++++++++++++++++++++++++
 2 files changed, 40 insertions(+)

diff --git a/include/uapi/linux/tcp.h b/include/uapi/linux/tcp.h
index 879eeb0a084b..93eab0b06c00 100644
--- a/include/uapi/linux/tcp.h
+++ b/include/uapi/linux/tcp.h
@@ -128,6 +128,7 @@ enum {
 #define TCP_CM_INQ		TCP_INQ
 
 #define TCP_TX_DELAY		37	/* delay outgoing packets by XX usec */
+#define TCP_TLS_HS		38	/* do tls 1.3 handshake in kernel */
 
 
 #define TCP_REPAIR_ON		1
diff --git a/net/ipv4/tcp.c b/net/ipv4/tcp.c
index 33f559f491c8..2dff9c6a4e0a 100644
--- a/net/ipv4/tcp.c
+++ b/net/ipv4/tcp.c
@@ -279,6 +279,7 @@
 #include <linux/uaccess.h>
 #include <asm/ioctls.h>
 #include <net/busy_poll.h>
+#include <crypto/tls_hs.h>
 
 /* Track pending CMSGs. */
 enum {
@@ -4374,6 +4375,44 @@ int do_tcp_getsockopt(struct sock *sk, int level,
 			err = -EFAULT;
 		return err;
 	}
+#endif
+#if IS_BUILTIN(CONFIG_CRYPTO_TLS_HS)
+	case TCP_TLS_HS: {
+		struct tls_vec vec = {NULL, 0};
+		struct tls_hs *tls;
+		u8 *p, flag;
+		int err = 0;
+
+		if (len < 1)
+			return -EFAULT;
+		p = memdup_sockptr(optval, len);
+		if (IS_ERR(p))
+			return PTR_ERR(p);
+
+		flag = *p; /* get flag for tls setup */
+		if (len >= 5) { /* get early data to send */
+			tls_vec(&vec, p + 5, *((u32 *)(p + 1)));
+			if (len - 5 < vec.len) {
+				err = -EINVAL;
+				goto tls_err;
+			}
+		}
+
+		tls = tls_sk_handshake(sk->sk_socket, &vec, "tcp", flag);
+		if (IS_ERR(tls)) {
+			err = PTR_ERR(tls);
+			goto tls_err;
+		}
+
+		/* copy it back if there is early data received */
+		if (len < vec.len || copy_to_sockptr(optlen, &vec.len, sizeof(int)) ||
+		    (vec.len && copy_to_sockptr(optval, vec.data, vec.len)))
+			err = -EFAULT;
+		tls_handshake_destroy(tls);
+tls_err:
+		kfree(p);
+		return err;
+	}
 #endif
 	default:
 		return -ENOPROTOOPT;
-- 
2.31.1

